#!/usr/bin/perl
#
# Copyright 2014 Pierre Mavro <deimos@deimos.fr>
# Copyright 2014 Vivien Didelot <vivien@didelot.org>
# Copyright 2018 Vladimir Novikov <oxore@protonmail.com>
#
# Licensed under the terms of the GNU GPL v3, or any later version.
#
# This script is meant to use as autorun script in i3wm config. It parses the
# output of the "acpi" command (often provided by a package of the same name) to
# read the status of the battery, and eventually its remaining time (to full
# charge). If this time presents it sends critical notification to dunst saying
# that charger is unplugged.

use strict;
use warnings;
use utf8;

sub check_charger_unplugged() {
    my $acpi;
    my $status;
    my $percent;
    my $bat_number = $ENV{BLOCK_INSTANCE} || 0;

    # read the first line of the "acpi" command output
    open (ACPI, "acpi -b | grep 'Battery $bat_number' |") or die;
    $acpi = <ACPI>;
    close(ACPI);

    # fail on unexpected output
    if ($acpi !~ /: (\w+), (\d+)%/) {
        die "$acpi\n";
    }

    $status = $1;
    $percent = $2;

    if ($status eq 'Discharging') {
        if ($acpi =~ /(\d\d:\d\d):/) {
            return 1
        }
    }

    return 0
}

use Fcntl ':flock';
open my $self, '<', $0 or die "Couldn't open self: $!";
flock $self, LOCK_EX | LOCK_NB or die "This script is already running";

while (1) {
   if (check_charger_unplugged() == 1) {
        system("notify-send -u critical \"Power source UNPLUGGED\"");
   }
   sleep(1);
}
